import typescript from '@typescript-eslint/eslint-plugin'

export default {
  /*
   * Сброс всех правил в состояние "Нет ошибки". Для плавной интеграции
   */
  plugins: {
    '@typescript-eslint': typescript
  },
  rules: {
    // Description: Require that function overload signatures be consecutive
    // Description RU: Требуется, чтобы сигнатуры перегрузки функций были последовательными
    // URL: 'https://typescript-eslint.io/rules/adjacent-overload-signatures'
    '@typescript-eslint/adjacent-overload-signatures': 'off',

    // Description: Require consistently using either T[] or Array<T> for arrays
    // Description RU: требуется последовательно использовать либо T[], либо Array<t> для массивов
    // URL: 'https://typescript-eslint.io/rules/array-type'
    '@typescript-eslint/array-type': 'off',

    // Description: Disallow awaiting a value that is not a Thenable
    // Description RU: Запретить ожидание значения, которое не является приемлемым
    // URL: 'https://typescript-eslint.io/rules/await-thenable'
    '@typescript-eslint/await-thenable': 'off',

    // Description: Disallow @ts-<directive> comments or require descriptions after directives
    // Description RU: Не допускать комментариев @ts-<directive> или требовать описания после директив
    // URL: 'https://typescript-eslint.io/rules/ban-ts-comment'
    '@typescript-eslint/ban-ts-comment': 'off',

    // Description: Disallow // tslint:<rule-flag> comments
    // Description RU: Запретить // tslint:<rule-flag> комментарии
    // URL: 'https://typescript-eslint.io/rules/ban-tslint-comment'
    '@typescript-eslint/ban-tslint-comment': 'off',

    // Description: Enforce that literals on classes are exposed in a consistent style
    // Description RU: Необходимо обеспечить, чтобы литералы в классах отображались в согласованном стиле
    // URL: 'https://typescript-eslint.io/rules/class-literal-property-style'
    '@typescript-eslint/class-literal-property-style': 'off',

    // Description: Enforce that class methods utilize this
    // Description RU: Необходимо обеспечить, чтобы методы класса использовали this
    // URL: 'https://typescript-eslint.io/rules/class-methods-use-this'
    '@typescript-eslint/class-methods-use-this': 'off',

    // Description: Enforce specifying generic type arguments on type annotation or constructor name of a constructor call
    // Description RU: Принудительное указание аргументов универсального типа в аннотации к типу или имени конструктора при вызове конструктора.
    // URL: 'https://typescript-eslint.io/rules/consistent-generic-constructors'
    '@typescript-eslint/consistent-generic-constructors': 'off',

    // Description: Require or disallow the Record type
    // Description RU: Требовать или запрещать использование Record type
    // URL: 'https://typescript-eslint.io/rules/consistent-indexed-object-style'
    '@typescript-eslint/consistent-indexed-object-style': 'off',

    // Description: Require return statements to either always or never specify values
    // Description RU: Требует, чтобы операторы return либо указывали значения, либо никогда не указывали значения
    // URL: 'https://typescript-eslint.io/rules/consistent-return'
    '@typescript-eslint/consistent-return': 'off',

    // Description: Enforce consistent usage of type assertion
    // Description RU: принудительное использование утверждения типа для обеспечения согласованности
    // URL: 'https://typescript-eslint.io/rules/consistent-type-assertions'
    '@typescript-eslint/consistent-type-assertions': 'off',

    // Description: Enforce type definitions to consistently use either interface or type
    // Description RU: Принудительное использование определений типов для последовательного использования интерфейса или типа
    // URL: 'https://typescript-eslint.io/rules/consistent-type-definitions'
    '@typescript-eslint/consistent-type-definitions': 'off',

    // Description: Enforce consistent usage of type exports
    // Description RU: принудительное использование последовательного использования экспорта типов
    // URL: 'https://typescript-eslint.io/rules/consistent-type-exports'
    '@typescript-eslint/consistent-type-exports': 'off',

    // Description: Enforce consistent usage of type imports
    // Description RU: для обеспечения согласованного использования импорта типов
    // URL: 'https://typescript-eslint.io/rules/consistent-type-imports'
    '@typescript-eslint/consistent-type-imports': 'off',

    // Description: Enforce default parameters to be last
    // Description RU: Параметры по умолчанию должны быть последними
    // URL: 'https://typescript-eslint.io/rules/default-param-last'
    '@typescript-eslint/default-param-last': 'off',

    // Description: Enforce dot notation whenever possible
    // Description RU: принудительное использование точечной нотации
    // URL: 'https://typescript-eslint.io/rules/dot-notation'
    '@typescript-eslint/dot-notation': 'off',

    // Description: Require explicit return types on functions and class methods
    // Description RU: требуется указывать явные типы возвращаемых данных для функций и методов класса
    // URL: 'https://typescript-eslint.io/rules/explicit-function-return-type'
    '@typescript-eslint/explicit-function-return-type': 'off',

    // Description: Require explicit accessibility modifiers on class properties and methods
    // Description RU: требуются явные модификаторы доступности для свойств и методов класса
    // URL: 'https://typescript-eslint.io/rules/explicit-member-accessibility'
    '@typescript-eslint/explicit-member-accessibility': 'off',

    // Description: Require explicit return and argument types on exported functions' and classes' public class methods
    // Description RU: требуется явно указывать возвращаемые значения и типы аргументов для экспортируемых функций' и 'общедоступных методов классов'
    // URL: 'https://typescript-eslint.io/rules/explicit-module-boundary-types'
    '@typescript-eslint/explicit-module-boundary-types': 'off',

    // Description: Require or disallow initialization in variable declarations
    // Description RU: Требовать или запрещать инициализацию в объявлениях переменных
    // URL: 'https://typescript-eslint.io/rules/init-declarations'
    '@typescript-eslint/init-declarations': 'off',

    // Description: Enforce a maximum number of parameters in function definitions
    // Description RU: Укажите максимальное количество параметров в определениях функций
    // URL: 'https://typescript-eslint.io/rules/max-params'
    '@typescript-eslint/max-params': 'off',

    // Description: Require a consistent member declaration order
    // Description RU: требуется согласованный порядок объявления элементов
    // URL: 'https://typescript-eslint.io/rules/member-ordering'
    '@typescript-eslint/member-ordering': 'off',

    // Description: Enforce using a particular method signature syntax
    // Description RU: Принудительно использовать определенный синтаксис подписи метода
    // URL: 'https://typescript-eslint.io/rules/method-signature-style'
    '@typescript-eslint/method-signature-style': 'off',

    // Description: Enforce naming conventions for everything across a codebase
    // Description RU: Принудительно применять соглашения об именовании для всего, что связано с кодовой базой
    // URL: 'https://typescript-eslint.io/rules/naming-convention'
    '@typescript-eslint/naming-convention': 'off',

    // Description: Disallow generic Array constructors
    // Description RU: Запрещает использование конструкторов универсальных массивов
    // URL: 'https://typescript-eslint.io/rules/no-array-constructor'
    '@typescript-eslint/no-array-constructor': 'off',

    // Description: Disallow using the delete operator on array values
    // Description RU: Запрещено использовать оператор удаления для значений массива
    // URL: 'https://typescript-eslint.io/rules/no-array-delete'
    '@typescript-eslint/no-array-delete': 'off',

    // Description: Require .toString() and .toLocaleString() to only be called on objects which provide useful information when stringified
    // Description RU: Требовать.toString() и .toLocaleString() должны вызываться только для объектов, которые предоставляют полезную информацию при преобразовании в строку
    // URL: 'https://typescript-eslint.io/rules/no-base-to-string'
    '@typescript-eslint/no-base-to-string': 'off',

    // Description: Disallow non-null assertion in locations that may be confusing
    // Description RU: Запрещать ненулевое утверждение в местах, которые могут привести к путанице
    // URL: 'https://typescript-eslint.io/rules/no-confusing-non-null-assertion'
    '@typescript-eslint/no-confusing-non-null-assertion': 'off',

    // Description: Require expressions of type void to appear in statement position
    // Description RU: Требуется, чтобы выражения типа void появлялись в позиции утверждения
    // URL: 'https://typescript-eslint.io/rules/no-confusing-void-expression'
    '@typescript-eslint/no-confusing-void-expression': 'off',

    // Description: Disallow using code marked as @deprecated
    // Description RU: Запретить использование кода, помеченного как @deprecated
    // URL: 'https://typescript-eslint.io/rules/no-deprecated'
    '@typescript-eslint/no-deprecated': 'off',

    // Description: Disallow duplicate class members
    // Description RU: Запретить дублирование элементов класса
    // URL: 'https://typescript-eslint.io/rules/no-dupe-class-members'
    '@typescript-eslint/no-dupe-class-members': 'off',

    // Description: Disallow duplicate enum member values
    // Description RU: Запрещать дублирование значений элементов перечисления
    // URL: 'https://typescript-eslint.io/rules/no-duplicate-enum-values'
    '@typescript-eslint/no-duplicate-enum-values': 'off',

    // Description: Disallow duplicate constituents of union or intersection types
    // Description RU: Запрещать дублирование элементов типов объединения или пересечения
    // URL: 'https://typescript-eslint.io/rules/no-duplicate-type-constituents'
    '@typescript-eslint/no-duplicate-type-constituents': 'off',

    // Description: Disallow using the delete operator on computed key expressions
    // Description RU: Запретить использование оператора delete для вычисляемых ключевых выражений
    // URL: 'https://typescript-eslint.io/rules/no-dynamic-delete'
    '@typescript-eslint/no-dynamic-delete': 'off',

    // Description: Disallow empty functions
    // Description RU: Запрещать пустые функции
    // URL: 'https://typescript-eslint.io/rules/no-empty-function'
    '@typescript-eslint/no-empty-function': 'off',

    // Description: Disallow the declaration of empty interfaces
    // Description RU: Запретить объявление пустых интерфейсов
    // URL: 'https://typescript-eslint.io/rules/no-empty-interface'
    '@typescript-eslint/no-empty-interface': 'off',

    // Description: Disallow accidentally using the 'empty object' type
    // Description RU: Запретить случайное использование типа 'пустой объект'
    // URL: 'https://typescript-eslint.io/rules/no-empty-object-type'
    '@typescript-eslint/no-empty-object-type': 'off',

    // Description: Disallow the any type
    // Description RU: Запретить использование any
    // URL: 'https://typescript-eslint.io/rules/no-explicit-any'
    '@typescript-eslint/no-explicit-any': 'off',

    // Description: Disallow extra non-null assertions
    // Description RU: Запрещать дополнительные ненулевые утверждения
    // URL: 'https://typescript-eslint.io/rules/no-extra-non-null-assertion'
    '@typescript-eslint/no-extra-non-null-assertion': 'off',

    // Description: Disallow classes used as namespaces
    // Description RU: Запретить использование классов в качестве пространств имен
    // URL: 'https://typescript-eslint.io/rules/no-extraneous-class'
    '@typescript-eslint/no-extraneous-class': 'off',

    // Description: Require Promise-like statements to be handled appropriately
    // Description RU: Требуйте, чтобы заявления, подобные обещаниям, обрабатывались надлежащим образом
    // URL: 'https://typescript-eslint.io/rules/no-floating-promises'
    '@typescript-eslint/no-floating-promises': 'off',

    // Description: Disallow iterating over an array with a for-in loop
    // Description RU: Запретить повторение по массиву с помощью цикла for-in
    // URL: 'https://typescript-eslint.io/rules/no-for-in-array'
    '@typescript-eslint/no-for-in-array': 'off',

    // Description: Disallow the use of eval()-like functions
    // Description RU: Запретить использование функций, подобных eval()
    // URL: 'https://typescript-eslint.io/rules/no-implied-eval'
    '@typescript-eslint/no-implied-eval': 'off',

    // Description: Enforce the use of top-level import type qualifier when an import only has specifiers with inline type qualifiers
    // Description RU: Принудительно используйте классификатор типа импорта верхнего уровня, если импорт содержит только спецификаторы со встроенными классификаторами типа
    // URL: 'https://typescript-eslint.io/rules/no-import-type-side-effects'
    '@typescript-eslint/no-import-type-side-effects': 'off',

    // Description: Disallow explicit type declarations for variables or parameters initialized to a number, string, or boolean
    // Description RU: Запрещать явные объявления типов для переменных или параметров, инициализированных числом, строкой или логическим значением
    // URL: 'https://typescript-eslint.io/rules/no-inferrable-types'
    '@typescript-eslint/no-inferrable-types': 'off',

    // Description: Disallow this keywords outside of classes or class-like objects
    // Description RU: Запретить использование ключевое слово this вне классов или классоподобных объектов
    // URL: 'https://typescript-eslint.io/rules/no-invalid-this'
    '@typescript-eslint/no-invalid-this': 'off',

    // Description: Disallow void type outside of generic or return types
    // Description RU: Запретить использование типа void вне типов generic или return
    // URL: 'https://typescript-eslint.io/rules/no-invalid-void-type'
    '@typescript-eslint/no-invalid-void-type': 'off',

    // Description: Disallow function declarations that contain unsafe references inside loop statements
    // Description RU: Запрещать объявления функций, содержащие небезопасные ссылки внутри операторов цикла
    // URL: 'https://typescript-eslint.io/rules/no-loop-func'
    '@typescript-eslint/no-loop-func': 'off',

    // Description: Disallow literal numbers that lose precision
    // Description RU: Запрещать использование буквенных чисел, которые теряют точность
    // URL: 'https://typescript-eslint.io/rules/no-loss-of-precision'
    '@typescript-eslint/no-loss-of-precision': 'off',

    // Description: Disallow magic numbers
    // Description RU: Запрещать магические числа
    // URL: 'https://typescript-eslint.io/rules/no-magic-numbers'
    '@typescript-eslint/no-magic-numbers': 'off',

    // Description: Disallow the void operator except when used to discard a value
    // Description RU: Запрещать оператор void, за исключением случаев, когда он используется для удаления значения
    // URL: 'https://typescript-eslint.io/rules/no-meaningless-void-operator'
    '@typescript-eslint/no-meaningless-void-operator': 'off',

    // Description: Enforce valid definition of new and constructor
    // Description RU: Обеспечить соблюдение корректного определения new и constructor
    // URL: 'https://typescript-eslint.io/rules/no-misused-new'
    '@typescript-eslint/no-misused-new': 'off',

    // Description: Disallow Promises in places not designed to handle them
    // Description RU: Запрещать обещания в местах, не предназначенных для их выполнения
    // URL: 'https://typescript-eslint.io/rules/no-misused-promises'
    '@typescript-eslint/no-misused-promises': 'off',

    // Description: Disallow using the spread operator when it might cause unexpected behavior
    // Description RU: Запретить использование оператора spread, если это может привести к непредвиденному поведению
    // URL: 'https://typescript-eslint.io/rules/no-misused-spread'
    '@typescript-eslint/no-misused-spread': 'off',

    // Description: Disallow enums from having both number and string members
    // Description RU: Запрещать enums содержать как числовые, так и строковые элементы
    // URL: 'https://typescript-eslint.io/rules/no-mixed-enums'
    '@typescript-eslint/no-mixed-enums': 'off',

    // Description: Disallow TypeScript namespaces
    // Description RU: Запретить использование пространств имен TypeScript
    // URL: 'https://typescript-eslint.io/rules/no-namespace'
    '@typescript-eslint/no-namespace': 'off',

    // Description: Disallow non-null assertions in the left operand of a nullish coalescing operator
    // Description RU: Запрещать ненулевые утверждения в левом операнде оператора бычьего объединения
    // URL: 'https://typescript-eslint.io/rules/no-non-null-asserted-nullish-coalescing'
    '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 'off',

    // Description: Disallow non-null assertions after an optional chain expression
    // Description RU: Запрещать ненулевые утверждения после необязательного выражения цепочки
    // URL: 'https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain'
    '@typescript-eslint/no-non-null-asserted-optional-chain': 'off',

    // Description: Disallow non-null assertions using the ! postfix operator
    // Description RU: Запрещать ненулевые утверждения с помощью ! постфиксного оператора
    // URL: 'https://typescript-eslint.io/rules/no-non-null-assertion'
    '@typescript-eslint/no-non-null-assertion': 'off',

    // Description: Disallow variable redeclaration
    // Description RU: Запретить повторное объявление переменной
    // URL: 'https://typescript-eslint.io/rules/no-redeclare'
    '@typescript-eslint/no-redeclare': 'off',

    // Description: Disallow members of unions and intersections that do nothing or override type information
    // Description RU: Запрещать элементы объединений и пересечений, которые ничего не делают или переопределяют информацию о типе
    // URL: 'https://typescript-eslint.io/rules/no-redundant-type-constituents'
    '@typescript-eslint/no-redundant-type-constituents': 'off',

    // Description: Disallow invocation of require()
    // Description RU: Запретить вызов функции require()
    // URL: 'https://typescript-eslint.io/rules/no-require-imports'
    '@typescript-eslint/no-require-imports': 'off',

    // Description: Disallow specified modules when loaded by import
    // Description RU: Запрещать загрузку указанных модулей при импорте
    // URL: 'https://typescript-eslint.io/rules/no-restricted-imports'
    '@typescript-eslint/no-restricted-imports': 'off',

    // Description: Disallow certain types
    // Description RU: Запрещать определенные типы
    // URL: 'https://typescript-eslint.io/rules/no-restricted-types'
    '@typescript-eslint/no-restricted-types': 'off',

    // Description: Disallow variable declarations from shadowing variables declared in the outer scope
    // Description RU: Запрещать объявления переменных из-за скрытых переменных, объявленных во внешней области видимости
    // URL: 'https://typescript-eslint.io/rules/no-shadow'
    '@typescript-eslint/no-shadow': 'off',

    // Description: Disallow aliasing this
    // Description RU: Запретить наложение псевдонимов на этот
    // URL: 'https://typescript-eslint.io/rules/no-this-alias'
    '@typescript-eslint/no-this-alias': 'off',

    // Description: Disallow type aliases
    // Description RU: Запрещать псевдонимы типов
    // URL: 'https://typescript-eslint.io/rules/no-type-alias'
    '@typescript-eslint/no-type-alias': 'off',

    // Description: Disallow unnecessary equality comparisons against boolean literals
    // Description RU: Запретить ненужные сравнения на равенство с логическими литералами
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare'
    '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'off',

    // Description: Disallow conditionals where the type is always truthy or always falsy
    // Description RU: Запрещать условия, в которых тип всегда является истинным или всегда ложным
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-condition'
    '@typescript-eslint/no-unnecessary-condition': 'off',

    // Description: Disallow unnecessary assignment of constructor property parameter
    // Description RU: Запретить ненужное присвоение параметра свойства конструктора
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-parameter-property-assignment'
    '@typescript-eslint/no-unnecessary-parameter-property-assignment': 'off',

    // Description: Disallow unnecessary namespace qualifiers
    // Description RU: Запретить ненужные квалификаторы пространства имен
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-qualifier'
    '@typescript-eslint/no-unnecessary-qualifier': 'off',

    // Description: Disallow unnecessary template expressions
    // Description RU: Запретить использование ненужных шаблонных выражений
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-template-expression'
    '@typescript-eslint/no-unnecessary-template-expression': 'off',

    // Description: Disallow type arguments that are equal to the default
    // Description RU: Запрещать вводить аргументы, которые равны параметрам по умолчанию
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-type-arguments'
    '@typescript-eslint/no-unnecessary-type-arguments': 'off',

    // Description: Disallow type assertions that do not change the type of an expression
    // Description RU: Запрещать утверждения типа, которые не изменяют тип выражения
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-type-assertion'
    '@typescript-eslint/no-unnecessary-type-assertion': 'off',

    // Description: Disallow unnecessary constraints on generic types
    // Description RU: Запретить ненужные ограничения для универсальных типов
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-type-constraint'
    '@typescript-eslint/no-unnecessary-type-constraint': 'off',

    // Description: Disallow type parameters that aren't used multiple times
    // Description RU: Запретить использование параметров типа, которые не используются многократно
    // URL: 'https://typescript-eslint.io/rules/no-unnecessary-type-parameters'
    '@typescript-eslint/no-unnecessary-type-parameters': 'off',

    // Description: Disallow calling a function with a value with type any
    // Description RU: Запретить вызов функции со значением типа any
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-argument'
    '@typescript-eslint/no-unsafe-argument': 'off',

    // Description: Disallow assigning a value with type any to variables and properties
    // Description RU: Запретить присваивание значений с типом any переменным и свойствам
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-assignment'
    '@typescript-eslint/no-unsafe-assignment': 'off',

    // Description: Disallow calling a value with type any
    // Description RU: Запретить вызов значения с типом any
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-call'
    '@typescript-eslint/no-unsafe-call': 'off',

    // Description: Disallow unsafe declaration merging
    // Description RU: Запретить объединение небезопасных объявлений
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-declaration-merging'
    '@typescript-eslint/no-unsafe-declaration-merging': 'off',

    // Description: Disallow comparing an enum value with a non-enum value
    // Description RU: Запретить сравнение значения перечисления со значением, не являющимся перечислимым
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-enum-comparison'
    '@typescript-eslint/no-unsafe-enum-comparison': 'off',

    // Description: Disallow using the unsafe built-in Function type
    // Description RU: Запретить использование небезопасного встроенного типа функций
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-function-type'
    '@typescript-eslint/no-unsafe-function-type': 'off',

    // Description: Disallow member access on a value with type any
    // Description RU: Запретить доступ к элементу для значения с типом any
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-member-access'
    '@typescript-eslint/no-unsafe-member-access': 'off',

    // Description: Disallow returning a value with type any from a function
    // Description RU: Запретить возвращать значение с типом any из функции
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-return'
    '@typescript-eslint/no-unsafe-return': 'off',

    // Description: Disallow type assertions that narrow a type
    // Description RU: Запрещать утверждения типа, которые сужают тип
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-type-assertion'
    '@typescript-eslint/no-unsafe-type-assertion': 'off',

    // Description: Require unary negation to take a number
    // Description RU: Требуется унарное отрицание, чтобы принять число
    // URL: 'https://typescript-eslint.io/rules/no-unsafe-unary-minus'
    '@typescript-eslint/no-unsafe-unary-minus': 'off',

    // Description: Disallow unused expressions
    // Description RU: Запрещать неиспользуемые выражения
    // URL: 'https://typescript-eslint.io/rules/no-unused-expressions'
    '@typescript-eslint/no-unused-expressions': 'off',

    // Description: Disallow unused variables
    // Description RU: Запретить использование неиспользуемых переменных
    // URL: 'https://typescript-eslint.io/rules/no-unused-vars'
    '@typescript-eslint/no-unused-vars': 'off',

    // Description: Disallow the use of variables before they are defined
    // Description RU: Запретить использование переменных до их определения
    // URL: 'https://typescript-eslint.io/rules/no-use-before-define'
    '@typescript-eslint/no-use-before-define': 'off',

    // Description: Disallow unnecessary constructors
    // Description RU: Запретить использование ненужных конструкторов
    // URL: 'https://typescript-eslint.io/rules/no-useless-constructor'
    '@typescript-eslint/no-useless-constructor': 'off',

    // Description: Disallow empty exports that don't change anything in a module file
    // Description RU: Запрещать пустой экспорт, который ничего не меняет в файле модуля
    // URL: 'https://typescript-eslint.io/rules/no-useless-empty-export'
    '@typescript-eslint/no-useless-empty-export': 'off',

    // Description: Disallow require statements except in import statements
    // Description RU: Запрещать инструкции require, за исключением инструкций import
    // URL: 'https://typescript-eslint.io/rules/no-var-requires'
    '@typescript-eslint/no-var-requires': 'off',

    // Description: Disallow using confusing built-in primitive class wrappers
    // Description RU: Запретить использование запутанных встроенных оболочек примитивных классов
    // URL: 'https://typescript-eslint.io/rules/no-wrapper-object-types'
    '@typescript-eslint/no-wrapper-object-types': 'off',

    // Description: Enforce non-null assertions over explicit type assertions
    // Description RU: Применяйте ненулевые утверждения к утверждениям явного типа
    // URL: 'https://typescript-eslint.io/rules/non-nullable-type-assertion-style'
    '@typescript-eslint/non-nullable-type-assertion-style': 'off',

    // Description: Disallow throwing non-Error values as exceptions
    // Description RU: Запретить выдачу значений, не содержащих ошибок, в качестве исключений
    // URL: 'https://typescript-eslint.io/rules/only-throw-error'
    '@typescript-eslint/only-throw-error': 'off',

    // Description: Require or disallow parameter properties in class constructors
    // Description RU: Требовать или запрещать свойства параметров в конструкторах классов
    // URL: 'https://typescript-eslint.io/rules/parameter-properties'
    '@typescript-eslint/parameter-properties': 'off',

    // Description: Enforce the use of as const over literal type
    // Description RU: Принудительно использовать значение as const вместо литерального типа
    // URL: 'https://typescript-eslint.io/rules/prefer-as-const'
    '@typescript-eslint/prefer-as-const': 'off',

    // Description: Require destructuring from arrays and/or objects
    // Description RU: Требуется деструктуризация массивов и/или объектов
    // URL: 'https://typescript-eslint.io/rules/prefer-destructuring'
    '@typescript-eslint/prefer-destructuring': 'off',

    // Description: Require each enum member value to be explicitly initialized
    // Description RU: Требуется, чтобы каждое значение элемента enum было явно инициализировано
    // URL: 'https://typescript-eslint.io/rules/prefer-enum-initializers'
    '@typescript-eslint/prefer-enum-initializers': 'off',

    // Description: Enforce the use of Array.prototype.find() over Array.prototype.filter() followed by [0] when looking for a single result
    // Description RU: Принудительно используйте Array.prototype.find() вместо Array.prototype.filter(), за которым следует [0] при поиске единственного результата
    // URL: 'https://typescript-eslint.io/rules/prefer-find'
    '@typescript-eslint/prefer-find': 'off',

    // Description: Enforce the use of for-of loop over the standard for loop where possible
    // Description RU: По возможности применяйте цикл for-of вместо стандартного цикла for
    // URL: 'https://typescript-eslint.io/rules/prefer-for-of'
    '@typescript-eslint/prefer-for-of': 'off',

    // Description: Enforce using function types instead of interfaces with call signatures
    // Description RU: Принудительное использование типов функций вместо интерфейсов с сигнатурами вызовов
    // URL: 'https://typescript-eslint.io/rules/prefer-function-type'
    '@typescript-eslint/prefer-function-type': 'off',

    // Description: Enforce includes method over indexOf method
    // Description RU: Принудительное применение метода includes к методу indexOf
    // URL: 'https://typescript-eslint.io/rules/prefer-includes'
    '@typescript-eslint/prefer-includes': 'off',

    // Description: Require all enum members to be literal values
    // Description RU: Требуется, чтобы все элементы enum были буквальными значениями
    // URL: 'https://typescript-eslint.io/rules/prefer-literal-enum-member'
    '@typescript-eslint/prefer-literal-enum-member': 'off',

    // Description: Require using namespace keyword over module keyword to declare custom TypeScript modules
    // Description RU: Требуется использовать ключевое слово namespace вместо ключевого слова module для объявления пользовательских модулей TypeScript
    // URL: 'https://typescript-eslint.io/rules/prefer-namespace-keyword'
    '@typescript-eslint/prefer-namespace-keyword': 'off',

    // Description: Enforce using the nullish coalescing operator instead of logical assignments or chaining
    // Description RU: Принудительное использование оператора бычьего объединения вместо логических назначений или цепочки
    // URL: 'https://typescript-eslint.io/rules/prefer-nullish-coalescing'
    '@typescript-eslint/prefer-nullish-coalescing': 'off',

    // Description: Enforce using concise optional chain expressions instead of chained logical ands, negated logical ors, or empty objects
    // Description RU: Принудительное использование кратких необязательных цепочечных выражений вместо связанных логических и, отрицательных логических или или пустых объектов
    // URL: 'https://typescript-eslint.io/rules/prefer-optional-chain'
    '@typescript-eslint/prefer-optional-chain': 'off',

    // Description: Require using Error objects as Promise rejection reasons
    // Description RU: Требовать использования объектов Error в качестве причин отклонения обещания
    // URL: 'https://typescript-eslint.io/rules/prefer-promise-reject-errors'
    '@typescript-eslint/prefer-promise-reject-errors': 'off',

    // Description: Require private members to be marked as readonly if they're never modified outside of the constructor
    // Description RU: Требуйте, чтобы закрытые члены были помечены как доступные только для чтения, если они никогда не изменялись вне конструктора
    // URL: 'https://typescript-eslint.io/rules/prefer-readonly'
    '@typescript-eslint/prefer-readonly': 'off',

    // Description: Require function parameters to be typed as readonly to prevent accidental mutation of inputs
    // Description RU: Требуйте, чтобы параметры функции вводились только для чтения, чтобы предотвратить случайное изменение входных данных
    // URL: 'https://typescript-eslint.io/rules/prefer-readonly-parameter-types'
    '@typescript-eslint/prefer-readonly-parameter-types': 'off',

    // Description: Enforce using type parameter when calling Array#reduce instead of using a type assertion
    // Description RU: Принудительное использование параметра type при вызове Array#reduce вместо использования утверждения типа
    // URL: 'https://typescript-eslint.io/rules/prefer-reduce-type-parameter'
    '@typescript-eslint/prefer-reduce-type-parameter': 'off',

    // Description: Enforce RegExp#exec over String#match if no global flag is provided
    // Description RU: Примените RegExp#exec к String#match, если глобальный флаг не указан
    // URL: 'https://typescript-eslint.io/rules/prefer-regexp-exec'
    '@typescript-eslint/prefer-regexp-exec': 'off',

    // Description: Enforce that this is used when only this type is returned
    // Description RU: Убедитесь, что this используется, когда возвращается только этот тип
    // URL: 'https://typescript-eslint.io/rules/prefer-return-this-type'
    '@typescript-eslint/prefer-return-this-type': 'off',

    // Description: Enforce using String#startsWith and String#endsWith over other equivalent methods of checking substrings
    // Description RU: Принудительное использование String#StartsWith и String#EndsWith по сравнению с другими эквивалентными методами проверки подстрок
    // URL: 'https://typescript-eslint.io/rules/prefer-string-starts-ends-with'
    '@typescript-eslint/prefer-string-starts-ends-with': 'off',

    // Description: Enforce using @ts-expect-error over @ts-ignore
    // Description RU: Принудительное использование @ts-expect-error вместо @ts-ignore
    // URL: 'https://typescript-eslint.io/rules/prefer-ts-expect-error'
    '@typescript-eslint/prefer-ts-expect-error': 'off',

    // Description: Require any function or method that returns a Promise to be marked async
    // Description RU: Требуется, чтобы любая функция или метод, возвращающий обещание, были помечены как асинхронные
    // URL: 'https://typescript-eslint.io/rules/promise-function-async'
    '@typescript-eslint/promise-function-async': 'off',

    // Description: Enforce that get() types should be assignable to their equivalent set() type
    // Description RU: Обеспечьте, чтобы типы get() могли быть назначены их эквивалентному типу set()
    // URL: 'https://typescript-eslint.io/rules/related-getter-setter-pairs'
    '@typescript-eslint/related-getter-setter-pairs': 'off',

    // Description: Require Array#sort and Array#toSorted calls to always provide a compareFunction
    // Description RU: Требовать массива#sort массив#toSorted вызовов, чтобы всегда предоставлять функцию сравнения
    // URL: 'https://typescript-eslint.io/rules/require-array-sort-compare'
    '@typescript-eslint/require-array-sort-compare': 'off',

    // Description: Disallow async functions which do not return promises and have no await expression
    // Description RU: Запрещать асинхронные функции, которые не возвращают обещания и не имеют выражения ожидания
    // URL: 'https://typescript-eslint.io/rules/require-await'
    '@typescript-eslint/require-await': 'off',

    // Description: Require both operands of addition to be the same type and be bigint, number, or string
    // Description RU: Требуется, чтобы оба операнда сложения были одного типа и представляли собой bigint, число или строку
    // URL: 'https://typescript-eslint.io/rules/restrict-plus-operands'
    '@typescript-eslint/restrict-plus-operands': 'off',

    // Description: Enforce template literal expressions to be of string type
    // Description RU: Принудительное использование шаблонных литеральных выражений строкового типа
    // URL: 'https://typescript-eslint.io/rules/restrict-template-expressions'
    '@typescript-eslint/restrict-template-expressions': 'off',

    // Description: Enforce consistent awaiting of returned promises
    // Description RU: Обеспечить постоянное ожидание возвращенных обещаний
    // URL: 'https://typescript-eslint.io/rules/return-await'
    '@typescript-eslint/return-await': 'off',

    // Description: Enforce constituents of a type union/intersection to be sorted alphabetically
    // Description RU: Принудительная сортировка элементов типа union/intersection в алфавитном порядке
    // URL: 'https://typescript-eslint.io/rules/sort-type-constituents'
    '@typescript-eslint/sort-type-constituents': 'off',

    // Description: Disallow certain types in boolean expressions
    // Description RU: Запрещать определенные типы в логических выражениях
    // URL: 'https://typescript-eslint.io/rules/strict-boolean-expressions'
    '@typescript-eslint/strict-boolean-expressions': 'off',

    // Description: Require switch-case statements to be exhaustive
    // Description RU: Требуйте, чтобы описания вариантов переключения были исчерпывающими
    // URL: 'https://typescript-eslint.io/rules/switch-exhaustiveness-check'
    '@typescript-eslint/switch-exhaustiveness-check': 'off',

    // Description: Disallow certain triple slash directives in favor of ES6-style import declarations
    // Description RU: Отмените некоторые директивы с тройной косой чертой в пользу деклараций импорта в стиле ES6
    // URL: 'https://typescript-eslint.io/rules/triple-slash-reference'
    '@typescript-eslint/triple-slash-reference': 'off',

    // Description: Require type annotations in certain places
    // Description RU: Требуется вводить аннотации в определенных местах
    // URL: 'https://typescript-eslint.io/rules/typedef'
    '@typescript-eslint/typedef': 'off',

    // Description: Enforce unbound methods are called with their expected scope
    // Description RU: Принудительно вызываемые несвязанные методы выполняются в соответствии с их ожидаемой областью применения
    // URL: 'https://typescript-eslint.io/rules/unbound-method'
    '@typescript-eslint/unbound-method': 'off',

    // Description: Disallow two overloads that could be unified into one with a union or an optional/rest parameter
    // Description RU: Запретить две перегрузки, которые могут быть объединены в одну с помощью union или необязательного параметра/rest
    // URL: 'https://typescript-eslint.io/rules/unified-signatures'
    '@typescript-eslint/unified-signatures': 'off',

    // Description: Enforce typing arguments in Promise rejection callbacks as unknown
    // Description RU: Принудительно вводите аргументы в обратных вызовах для отклонения обещаний как неизвестные
    // URL: 'https://typescript-eslint.io/rules/use-unknown-in-catch-callback-variable'
    '@typescript-eslint/use-unknown-in-catch-callback-variable': 'off',
  }
}
